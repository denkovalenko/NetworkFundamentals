openapi: 3.0.0
info:
  contact:
    name: Denys Kovalenko
  description: Network Fundamentals - Task 2. Denys Kovalenko
  version: 1.0.0
  title: Network Fundamentals
  license:
    name: MIT
servers:
  - url: 'https://sigmasoftware.stoplight.io/v1'

tags:
  - name: networkFundamentals

paths:
  /people:
    get:
      summary: Get all people
      description: Get all people
      operationId: listPeople
      tags:
        - networkFundamentals
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
        - schema:
            type: string
          in: query
          name: offset
      responses:
        '200':
          description: A paged array of people
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/People'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../common/models/error.v1.yaml
    post:
      description: Network Fundamentals - Task 2. Denys Kovalenko
      summary: Register new person
      operationId: createPerson
      tags:
        - networkFundamentals
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../common/models/error.v1.yaml
  /people/diagnosis/{name}:
    post:
      description: Network Fundamentals - Task 2. Denys Kovalenko
      summary: Search for users whom diagnosis starts with <string>
      operationId: searchUsersByDiagnosis
      tags:
        - networkFundamentals
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the diagnosis
          schema:
            type: string        
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../common/models/error.v1.yaml 
  /disease:
    get:
      summary: Get all disease
      description: Get all disease
      operationId: listDisease
      tags:
        - networkFundamentals
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
        - schema:
            type: string
          in: query
          name: offset
      responses:
        '200':
          description: A paged array of disease
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diseases'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../common/models/error.v1.yaml
    post:
      description: Network Fundamentals - Task 2. Denys Kovalenko
      summary: Register disease
      operationId: createDisease
      tags:
        - networkFundamentals
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../common/models/error.v1.yaml
  /treatment:
    get:
      summary: Get all treatments
      description: Get all treatments
      operationId: listTreatments
      tags:
        - networkFundamentals
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
        - schema:
            type: string
          in: query
          name: offset
      responses:
        '200':
          description: A paged array of treatments
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Therapies'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../common/models/error.v1.yaml
    post:
      description: Network Fundamentals - Task 2. Denys Kovalenko
      summary: Prescribe a treatment
      operationId: prescribeTreatment
      tags:
        - networkFundamentals
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../common/models/error.v1.yaml
  /therapy/{therapyId}:
    post:
      description: Network Fundamentals - Task 2. Denys Kovalenko
      summary: Finish the therapy
      operationId: finishTherapy
      tags:
        - networkFundamentals
      parameters:
        - name: therapyId
          in: path
          required: true
          description: The id of the therapyId to cancel
          schema:
            type: string        
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../common/models/error.v1.yaml  
  /medicalTest:
    get:
      summary: Get all medical tests
      description: Get all medical tests
      operationId: listMedicalTests
      tags:
        - networkFundamentals
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
        - schema:
            type: string
          in: query
          name: offset
      responses:
        '200':
          description: A paged array of medical tests
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalTests'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../common/models/error.v1.yaml
    post:
      description: Network Fundamentals - Task 2. Denys Kovalenko
      summary: Prescribe a medical test
      operationId: prescribeMedicalTests
      tags:
        - networkFundamentals
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../common/models/error.v1.yaml
  /medicalTest/{medicalTestId}/{attachment}:
    post:
      description: Network Fundamentals - Task 2. Denys Kovalenko
      summary: Add attachment to the medical test
      operationId: addAttachmentToMedicalTest
      tags:
        - networkFundamentals
      parameters:
        - name: medicalTestId
          in: path
          required: true
          description: The id of the medical test to insert
          schema:
            type: string
        - name: attachment
          in: path
          required: true
          description: The JSON of the attachment to insert
          schema:
            type: string
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../common/models/error.v1.yaml
  /medicalTest/{medicalTestId}:
    post:
      description: Network Fundamentals - Task 2. Denys Kovalenko
      summary: Cancel the medical test
      operationId: cancelMedicalTest
      tags:
        - networkFundamentals
      parameters:
        - name: medicalTestId
          in: path
          required: true
          description: The id of the medical test to cancel
          schema:
            type: string        
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../common/models/error.v1.yaml
  /medicalTest/dates/{previousYear}:
    post:
      description: Network Fundamentals - Task 2. Denys Kovalenko
      summary: Get all medical tests for the previous year
      operationId: getAllMedicalTestsForThePreviousYear
      tags:
        - networkFundamentals
      parameters:
        - name: previousYear
          in: path
          required: true
          description: Previous year
          schema:
            type: string
            format: date
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../common/models/error.v1.yaml
  /medication:
    get:
      summary: Get all medications
      description: Get all medications
      operationId: listMedications
      tags:
        - networkFundamentals
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
        - schema:
            type: string
          in: query
          name: offset
      responses:
        '200':
          description: A paged array of medications
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medications'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../common/models/error.v1.yaml
    post:
      description: Network Fundamentals - Task 2. Denys Kovalenko
      summary: Prescribe a medications
      operationId: prescribeMedications
      tags:
        - networkFundamentals
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../common/models/error.v1.yaml          
  /medications/{currentDate}:
    post:
      description: Network Fundamentals - Task 2. Denys Kovalenko
      summary: Get all ongoing medications
      operationId: getAllOngoingMedications
      tags:
        - networkFundamentals
      parameters:
        - name: currentDate
          in: path
          required: true
          description: The JSON of the attachment to insert
          schema:
            type: string
            format: date
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../common/models/error.v1.yaml
  /drugDosage/{drugId}/{quantity}:
    post:
      description: Network Fundamentals - Task 2. Denys Kovalenko
      summary: Change drug dosage
      operationId: updateDrugDosageById
      tags:
        - networkFundamentals
      parameters:
        - name: drugId
          in: path
          required: true
          description: The id of the drug to update
          schema:
            type: string
        - name: quantity
          in: path
          required: true
          description: The quantity of the drug to update
          schema:
            type: number
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../common/models/error.v1.yaml

components:
  schemas:
    People:
      type: array
      items:
        $ref: "#/components/schemas/People"
    Diseases:
      type: array
      items:
        $ref: "#/components/schemas/Diseases"
    Therapies:
      type: array
      items:
        $ref: "#/components/schemas/Therapies"
    MedicalTests:
      type: array
      items:
        $ref: "#/components/schemas/MedicalTests"
    Medications:
      type: array
      items:
        $ref: "#/components/schemas/Medications"